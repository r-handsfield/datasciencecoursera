makeVector <- function(x=numeric()) {}
getwd()
source("cachedemo.R")
makeVector
?makeVector
??makeVector
args("makeVector")
info("makeVector")
class("makeVector")
class("cachemean")
install.packages("Rcpp")
install.packages("xlsx")
install.packages(c("rjava", "xlsxjars"))
install.packages(c("rJava", "xlsxjars", "xlsx"))
Unable to compile a JNI program
install.packages("rJava")
install.packages("xlsx")
setwd("datasciencecoursera//3-gettingAndCleaningData")
read.xlsx2("quiz1//NaturalGasAcquisitionProgram.xlsx")
library("xlsx")
read.xlsx2("quiz1//NaturalGasAcquisitionProgram.xlsx")
read.xlsx2("quiz1//NaturalGasAcquisitionProgram.xlsx", sheet.index=1)
dat<-read.xlsx("./quiz1/NaturalGasAcquisitionProgram.xlsx", sheetIndex=1, rowIndex=18:23, colIndex=1:17, header=TRUE)
dat<-read.xlsx("./quiz1/NaturalGasAcquisitionProgram.xlsx", sheetIndex=1, rowIndex=18:23, colIndex=7:15, header=TRUE)
head(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
library("XML")
library("xml")
install.packages(c("XML", "XML2R"))
install.packages("XML")
View(dat)
install.packages("XML")
library(xml)
library(XML)
fileUrl<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
show.file("./")
list.files("./")
setwd("quiz1/")
list.files("./")
doc<-xmlTreeParse("BaltimoreRestaurants.xml", useInternal=TRUE)
doc
rootNode <- xmlRoot(doc)
rootNode
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
dim(rootNode)
length(rootNode)
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "node[@zipcode='21231']",xmlValue)
list()
xpathSApply(rootNode, "//name",xmlValue)
xpathSApply(rootNode, "//zipcode",xmlValue)
xpathSApply(rootNode, "node[@zipcode='21231']", xmlValue)
xpathSApply(rootNode, "//node[@zipcode='21231']", xmlValue)
list()
list(xpathSApply(rootNode, "//node[@zipcode='21231']", xmlValue))
xpathSApply(rootNode, "//zipcode='21231'", xmlValue)
xpathSApply(rootNode, "//zipcode=21231", xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode=21231", xmlValue)
vec<-xpathSApply(rootNode, "//zipcode", xmlValue)
length(vec)
count(vec=21231)
?count
vec[vec=21231]
class(vec)
vec[vec='21231']
vec
vec[vec=='21231']
length(vec[vec=='21231'])
fread("IdahoHousing.csv")
?fread
unique(vec)
install.packages("data.table")
install.packages("jsonlite")
?fread
library(data.table)
?fread
fread("IdahoHousing.csv")
f<-fread("IdahoHousing.csv")
dim(f)
class(f)
DT<-f
head(DT$pwgtp15)
proc.time(mean(DT$pwgtp15,by=DT$SEX))
?proc.time
proc.time
mean(DT$pwgtp15,by=DT$SEX)
DT$pwgtp15
\
fread("AmericanCommunitySurvey.csv")
fread("AmericanCommunitySurvey.csv")->DT
head(DT$pwgtp15)
t<-proc.time()
mean(DT$pwgtp15,by=DT$SEX)
proc.time()-t
t<-proc.time()
DT[,mean(pwgtp15),by=SEX]
proc.time()-t
t<-proc.time()
tapply(DT$pwgtp15,DT$SEX,mean)
proc.time()-t
t<-proc.time()
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
proc.time()-t
t<-proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
proc.time()-t
t<-proc.time()
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
proc.time()-t
